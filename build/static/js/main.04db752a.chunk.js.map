{"version":3,"sources":["utils/auth.js","Components/UserButton.js","Pages/Quiz.js","Components/PrivateRoute.js","Pages/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["isBrowser","window","getUser","localStorage","getItem","JSON","parse","setUser","user","a","setItem","stringify","email","firebase","database","ref","uid","once","res","console","log","val","error","isAdmin","UserButton","history","useHistory","Item","main","displayName","onClick","_firebase","Promise","resolve","auth","signOut","then","push","Quiz","questionID","setGameStatus","useToasts","setToasts","useState","question","setQuestion","loading","setLoading","submitting","setSubmitting","submittingOption","setSubmittingOption","waiting","setWaiting","submittingError","setSubmittingError","useEffect","snapshot","answers","className","size","href","shadow","h3","title","Object","keys","map","answerID","disabled","cash","score","transaction","answer","catch","err","globalScore","globalCash","currentUser","split","text","userCash","scoreCash","setTimeout","submitAnswer","PrivateRoute","Component","component","authed","rest","render","props","to","pathname","state","from","location","Stat","label","stat","hoverable","incrementQuestion","step","min","max","currentQuestionID","questionNumber","parseInt","setStatus","status","StartGameModal","modalOpen","setModalOpen","close","open","onClose","Title","Content","style","textAlign","Action","passive","startGame","Admin","numUsers","setNumUsers","game","setGame","on","length","h2","activeQuestion","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","gameRef","isSignedIn","setIsSignedIn","isSigningIn","setIsSigningIn","gameStatus","setQuestionID","AuthProvider","GoogleAuthProvider","setCustomParameters","login_hint","hd","unregisterAuthObserver","onAuthStateChanged","theme","type","path","exact","gameEnded","h1","i","width","marginBottom","ghost","setPersistence","Auth","Persistence","LOCAL","signInWithPopup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04db752a.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n/**\n * Determines whether or not the app is in SSR\n * @returns {Boolean} Is the app running in a browser or not\n */\nexport const isBrowser = () => typeof window !== 'undefined';\n\n/**\n * Gets the current user from LocalStorage\n * @returns {User<JSON>} Firebase auth user object\n */\nexport const getUser = () => (isBrowser() && window.localStorage.getItem('user')\n  ? JSON.parse(window.localStorage.getItem('user'))\n  : {});\n\n\n/**\n * Sets user object into LocalStorage\n * @param {firebase.auth.user} user\n */\nexport const setUser = async (user) => {\n  if (isBrowser()) {\n    window.localStorage.setItem('user', JSON.stringify(user));\n    if (user.email) {\n      try {\n        const res = await firebase.database().ref(`/admins/${user.uid}`).once('value');\n        console.log(res.val())\n        window.localStorage.setItem('isAdmin', res.val());\n      } catch (err) {\n        console.error(err)\n      }\n    }\n  }\n};\n\n/**\n * Determines auth state of user\n * @returns {Boolean} User login status\n */\nexport const isLoggedIn = () => {\n  const user = getUser();\n  return !!user.email;\n};\n\n/**\n * Determines admin state of user\n * @returns {Boolean} User admin status\n */\nexport const isAdmin = () => (isBrowser() && window.localStorage.getItem('isAdmin')\n  ? JSON.parse(window.localStorage.getItem('isAdmin'))\n  : false);\n\n/**\n * Logs the current user out\n * @param {firebase} _firebase\n * @returns {Promise} Resolves a promise once logged out\n */\nexport const logout = (_firebase) => new Promise((resolve) => {\n  _firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      setUser({});\n      resolve();\n    });\n});","import React from \"react\";\nimport firebase from \"firebase\";\nimport { ButtonDropdown } from \"@geist-ui/react\";\nimport { getUser, isAdmin, logout } from \"../utils/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserButton = () => {\n  let history = useHistory();\n\n  const redirectToAdmin = () => {\n    history.push(\"/admin\");\n  };\n\n  return (\n    <ButtonDropdown>\n      <ButtonDropdown.Item main>{getUser().displayName}</ButtonDropdown.Item>\n      <ButtonDropdown.Item onClick={() => logout(firebase)}>\n        Log out\n      </ButtonDropdown.Item>\n      {isAdmin() && (\n        <ButtonDropdown.Item onClick={redirectToAdmin}>\n          Admin\n        </ButtonDropdown.Item>\n      )}\n    </ButtonDropdown>\n  );\n};\n\nexport default UserButton;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport {\n  Breadcrumbs,\n  Button,\n  Card,\n  Loading,\n  Text,\n  useToasts,\n} from \"@geist-ui/react\";\n// import { getUser, logout } from \"../utils/auth\";\nimport UserButton from \"../Components/UserButton\";\n\nconst Quiz = ({ questionID, setGameStatus }) => {\n  console.log(questionID);\n  const [, setToasts] = useToasts();\n  const [question, setQuestion] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [submittingOption, setSubmittingOption] = useState(\"\");\n  const [waiting, setWaiting] = useState(false);\n  const [submittingError, setSubmittingError] = useState(false);\n\n  const submitAnswer = (answerID, cash, score) => {\n    // set ui states\n    setSubmittingOption(answerID);\n    setSubmitting(true);\n\n    // store to global answer db\n    // refer to the questions/questionID/answers/answerID/count - increment value\n    firebase\n      .database()\n      .ref(`/answers/${questionID}/${answerID}`)\n      .transaction((answer) => {\n        return answer + 1;\n      })\n      .catch((err) => {\n        setSubmittingError(true);\n        setSubmitting(false);\n        setSubmittingOption(null);\n        console.error(err);\n      });\n\n    firebase\n      .database()\n      .ref(`/answers/score`)\n      .transaction((globalScore) => {\n        return globalScore + (score || 0);\n      })\n      .catch((err) => {\n        setSubmittingError(true);\n        setSubmitting(false);\n        setSubmittingOption(null);\n        console.error(err);\n      });\n\n    firebase\n      .database()\n      .ref(`/answers/cash`)\n      .transaction((globalCash) => {\n        return globalCash + (cash || 0);\n      })\n      .catch((err) => {\n        setSubmittingError(true);\n        setSubmitting(false);\n        setSubmittingOption(null);\n        console.error(err);\n      });\n\n    // store to user db\n    // users/student#/questions/questionID/ - push full answer\n    // This code is shit and @jhthenerd should feel bad. Too Bad!\n    firebase\n      .database()\n      .ref(\n        `/users/${\n          firebase.auth().currentUser.email.split(\"@\")[0]\n        }/questions/${questionID}`\n      )\n      .transaction(() => {\n        return answerID;\n      })\n      .catch((err) => {\n        setSubmittingError(true);\n        setToasts({ text: \"Something went wrong, try again. \" });\n        setSubmitting(false);\n        setSubmittingOption(null);\n        console.error(err);\n      });\n    firebase\n      .database()\n      .ref(`/users/${firebase.auth().currentUser.email.split(\"@\")[0]}/cash`)\n      .transaction((userCash) => {\n        return userCash + (cash || 0);\n      })\n      .catch((err) => {\n        setSubmittingError(true);\n        setToasts({ text: \"Something went wrong, try again. \" });\n        setSubmitting(false);\n        setSubmittingOption(null);\n        console.error(err);\n      });\n    firebase\n      .database()\n      .ref(`/users/${firebase.auth().currentUser.email.split(\"@\")[0]}/score`)\n      .transaction((scoreCash) => {\n        return scoreCash + (score || 0);\n      })\n      .catch((err) => {\n        setSubmittingError(true);\n        setToasts({ text: \"Something went wrong, try again. \" });\n        setSubmitting(false);\n        setSubmittingOption(null);\n        console.error(err);\n      });\n\n    setSubmittingOption(\"\");\n    if (!submittingError) {\n      setToasts({ text: \"Your answer was submitted\" });\n    }\n    setTimeout(() => {\n      // navigate\n      setWaiting(true);\n    }, 1500);\n  };\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(`/questions/${questionID}`)\n      .once(\"value\", (snapshot) => {\n        console.log(snapshot.val().answers)\n        const question = snapshot.val()\n        setQuestion(question);\n        setWaiting(false);\n        setSubmitting(false);\n        setSubmittingOption(\"\");\n        setSubmittingError(false);\n        setLoading(false);\n      });\n  }, [questionID]);\n\n  if (waiting) {\n    return (\n      <Loading className=\"loading\" size=\"large\">\n        Waiting for everyone else to catch up\n      </Loading>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"quiz-header\">\n        <Breadcrumbs className=\"quiz-breadcrumbs\">\n          <Breadcrumbs.Item href=\"#\">The Invisible Hand</Breadcrumbs.Item>\n          <Breadcrumbs.Item href=\"#\">Questions</Breadcrumbs.Item>\n          <Breadcrumbs.Item className=\"question-breadcrumb\">\n            {questionID}\n          </Breadcrumbs.Item>\n        </Breadcrumbs>\n        <UserButton />\n      </div>\n      <Card shadow className=\"question-card\">\n        {loading ? (\n          <Loading />\n        ) : (\n          <>\n            <Text h3>{question.title}</Text>\n            <div className=\"button-grid\">\n              {Object.keys(question.answers).map((answerID) => (\n                <Button\n                  loading={submittingOption === answerID}\n                  disabled={submitting}\n                  key={answerID}\n                  size=\"large\"\n                  className=\"quiz-button\"\n                  onClick={() =>\n                    submitAnswer(\n                      answerID,\n                      question.answers[answerID].cash,\n                      question.answers[answerID].score\n                    )\n                  }\n                >\n                  {question.answers[answerID].title}\n                </Button>\n              ))}\n            </div>\n          </>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Quiz;\n","import {Route, Redirect} from 'react-router-dom'\n\nconst PrivateRoute = ({component: Component, authed, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authed === true\n        ? <Component {...props} />\n        : <Redirect to={{pathname: '/', state: {from: props.location}}} />}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import { Button, ButtonGroup, Card, Dot, Modal, Text, useToasts } from \"@geist-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\n\nconst Stat = ({ label, stat }) => (\n  <Card hoverable>\n    <Text h3 size=\"2rem\">\n      {stat}\n    </Text>\n    <p>{label}</p>\n  </Card>\n);\n\nconst incrementQuestion = ({step = 1, min = 1, max = 5, setToasts}) => {\n  // firebase transaction stuff here\n  firebase\n    .database()\n    .ref('/game/activeQuestion')\n    .transaction((currentQuestionID) => {\n      let questionNumber = parseInt(currentQuestionID[1]);\n      questionNumber += step;\n\n      if (questionNumber < min) {\n        setToasts({ text: \"You can't go backwards any more!\" });\n        questionNumber = min\n      } else if (questionNumber > max) {\n        setToasts({ text: \"You can't go forwards any more!\" });\n        questionNumber = max;\n      }\n\n      return `q${questionNumber}`;\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n}\n\nconst setStatus = (status) => {\n  firebase\n    .database()\n    .ref('/game/status')\n    .transaction(() => {\n      return status\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n}\n\nconst StartGameModal = ({modalOpen, setModalOpen}) => {\n  const close = () => {\n    setModalOpen(false);\n  }\n\n  return (\n    <Modal open={modalOpen} onClose={close}>\n      <Modal.Title>Start Game</Modal.Title>\n      <Modal.Content style={{ textAlign: \"center\" }}>Starting the game will clear all previous game data</Modal.Content>\n      <Modal.Action passive onClick={close}>Cancel</Modal.Action>\n      <Modal.Action className=\"danger-modal-button\" onClick={() => startGame(setModalOpen)}>Start Game</Modal.Action>\n    </Modal>\n  )\n}\n\nconst startGame = (setModalOpen) => {\n  // Reset firebase shit\n  firebase.database().ref('/answers').transaction(() => {\n    return null;\n  }).catch((err) => {\n    console.error(err);\n  });\n  firebase.database().ref('/users').transaction(() => {\n    return null;\n  }).catch((err) => {\n    console.error(err);\n  });\n  // set status to question\n  setModalOpen(false)\n  setStatus(\"question\");\n}\n\nconst Admin = () => {\n  const [numUsers, setNumUsers] = useState(0);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [, setToasts] = useToasts();\n  const [game, setGame] = useState({});\n  useEffect(() => {\n    // grab # of users\n    firebase\n      .database()\n      .ref(\"users\")\n      .on(\"value\", (snapshot) => {\n        if (snapshot.val()) {\n          setNumUsers(Object.keys(snapshot.val()).length);\n        }\n      });\n    firebase\n      .database()\n      .ref(\"game\")\n      .on(\"value\", (snapshot) => {\n        if (snapshot.val()) {\n          setGame(snapshot.val());\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <Text h2>\n        Admin Page <Dot className=\"admin-dot-indicator\">{numUsers} Users</Dot>\n      </Text>\n      <div className=\"admin-content\">\n        <div className=\"admin-quickstats\">\n          <Stat stat=\"+89\" label=\"Societal Score\" />\n          <Stat stat=\"$3004\" label=\"Average Cash\" />\n          <Stat \n            stat={{ \"question\": game.activeQuestion }[game.status] || \"-\"} \n            label={{ \"question\": \"Active Question\", \"waiting\": \"Waiting for Game to Start\", \"gameEnded\": \"Game Ended\" }[game.status]} />\n        </div>\n        <div className=\"admin-quiz-buttons\">\n          <ButtonGroup>\n            <Button onClick={() => setStatus(\"waiting\")}>Waiting</Button>\n            <Button onClick={() => setModalOpen(true)}>Start Game</Button>\n            <Button onClick={() => setStatus(\"question\")}>Resume Game</Button>\n            <Button onClick={() => setStatus(\"gameEnded\")}>End Game</Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button onClick={() => incrementQuestion({step: -1, setToasts: setToasts})} >Previous Question</Button>\n            <Button onClick={() => incrementQuestion({setToasts: setToasts})}>Next Question</Button>\n          </ButtonGroup>\n        </div>\n      </div>\n      <StartGameModal modalOpen={modalOpen} setModalOpen={setModalOpen} />\n    </>\n  );\n};\n\nexport default Admin;\n","import {\n  Button,\n  CssBaseline,\n  GeistProvider,\n  Loading,\n  Text,\n  Note,\n} from \"@geist-ui/react\";\nimport firebase from \"firebase\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Quiz from \"./Pages/Quiz\";\nimport \"./App.css\";\nimport { isAdmin, setUser } from \"./utils/auth\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport Admin from \"./Pages/Admin\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDN_i9crnVUhgOak4rGRCpAkrFtfWHWJh0\",\n  authDomain: \"the-invisible-hand-933c9.firebaseapp.com\",\n  databaseURL: \"https://the-invisible-hand-933c9-default-rtdb.firebaseio.com\",\n  projectId: \"the-invisible-hand-933c9\",\n  storageBucket: \"the-invisible-hand-933c9.appspot.com\",\n  messagingSenderId: \"1063063138020\",\n  appId: \"1:1063063138020:web:61cc687531fbc2682f06f1\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const database = firebase.database();\n  const gameRef = database.ref(\"game\");\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [isSigningIn, setIsSigningIn] = useState(false);\n  const [gameStatus, setGameStatus] = useState(\"waiting\");\n  const [questionID, setQuestionID] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    gameRef.on(\"value\", (snapshot) => {\n      // console.log(snapshot.val());\n      setQuestionID(snapshot.val().activeQuestion);\n      setGameStatus(snapshot.val().status || \"waiting\");\n      setLoading(false);\n    });\n  }, [gameRef]);\n\n  const AuthProvider = new firebase.auth.GoogleAuthProvider();\n  AuthProvider.setCustomParameters({\n    login_hint: \"000000@pdsb.net\",\n    hd: \"pdsb.net\",\n  });\n\n  const authenticate = () => {\n    setIsSigningIn(true);\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n      .then(() => {\n        firebase\n          .auth()\n          .signInWithPopup(AuthProvider)\n          .then((res) => {\n            setUser(res.user);\n          });\n      });\n  };\n\n  useEffect(() => {\n    const unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged((user) => {\n        setIsSignedIn(!!user);\n      });\n    return () => unregisterAuthObserver();\n  }, []);\n\n  if (!isSignedIn) {\n    return (\n      <GeistProvider theme={{ type: \"dark\" }}>\n        <CssBaseline />\n        <div className=\"App\">\n          <Text h2>Please Login to Play <Text i>The Invisible Hand</Text></Text>\n          <Note style={{ width: \"fit-content\", marginBottom: \"24px\" }}>You will need to use your PDSB.net account</Note>\n          <Button\n            type=\"secondary\"\n            ghost\n            loading={isSigningIn}\n            onClick={authenticate}\n          >\n            Login\n          </Button>\n        </div>\n      </GeistProvider>\n    );\n  }\n\n  return (\n    <GeistProvider theme={{ type: \"dark\" }}>\n      <CssBaseline />\n      <div className=\"App\">\n        <Router>\n          <Switch>\n          <Route path=\"/\" exact>\n          {console.log(gameStatus)}\n            {loading ? (\n              <Loading />\n            ) : (\n              {\n                /* todo: redirect to waiting if user has answered question already */\n                waiting: <Text h2> Waiting for game to start...</Text>,\n                question: <Quiz questionID={questionID} />,\n                gameEnded: <Text h2>Game Ended</Text>,\n              }[gameStatus] || <Text h1>Something went wrong</Text>\n            )}\n          </Route>\n          <PrivateRoute authed={isAdmin()} path=\"/admin\" component={Admin} />\n          </Switch>\n        </Router>\n        \n      </div>\n    </GeistProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}